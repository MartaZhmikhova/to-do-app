{"version":3,"sources":["components/header/Header.js","components/toDoList/ToDoList.js","components/addToDoList/AddToDoList.js","components/toDoContainer/ToDoContainer.js","components/button/Button.js","components/mainSection/MainSection.js","components/footer/Footer.js","serviceWorker.js","index.js","App.js"],"names":["Header","react_default","a","createElement","className","href","ToDoList","_ref","items","deleteItem","compleateItem","itemList","length","map","item","key","id","onClick","Button_Button","isCompleted","style","textDecoration","color","text","AddToDoList","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addItem","inherits","createClass","onSubmit","type","onChange","required","placeholder","React","Component","ToDoContainer","updateList","filter","toConsumableArray","bind","assertThisInitialized","count","ToDoList_ToDoList","AddToDoList_AddToDoList","Button","children","MainSection","done","hide","event","ToDoContainer_ToDoContainer","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src","alt","Header_Header","MainSection_MainSection","Footer_Footer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de0a12bf.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.scss'\n\nexport const Header = () => (\n    <header className='header'>\n      <div className='container'>\n        \n        </div>\n      <a className='header-logo' href='/'>ToDo</a>\n    </header>\n)","import React from 'react'\n\nimport {\n  Button\n} from \"../\";\n\n\nimport './ToDo.scss'\n\nexport const ToDoList = ({items, deleteItem, compleateItem}) => {\n  const itemList = items.length ? (\n      items.map(item=>\n          <div key={item.id}  className=\"item\" >\n              <div className=\"item-block\" onClick={()=>{compleateItem(item)}}>\n                <Button className={\"item-button\"}>{item && item.isCompleted ? \"ðŸ‘Œ\" : \"ðŸ‘‹\"}{\" \"}</Button>\n                <p className=\"item-name\" style={{ textDecoration: item.isCompleted ? \"line-through\" : \"\", color: item.isCompleted ? \"grey\" : \"\" }}>{item.text}</p>\n              </div>\n              <Button onClick={()=>{deleteItem(item.id)}} className={\"item-button item-button__remove\"}>X</Button>\n          </div>\n      )\n  ) \n  : (\n      <p className='textDisable'> No todos yet</p>\n  );\n  return(\n      <div>\n          {itemList}\n      </div>\n  );\n  \n}","import React from 'react'\nimport {\n  Button\n} from \"../\";\n\nimport './AddToDoList.scss'\n\nexport class AddToDoList extends React.Component {\n  state = {\n      text: '',\n  }\n\n  handleChange = (e) => {\n      this.setState(\n          {\n              text: e.target.value\n          }\n      ) \n  }\n  handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.addItem(this.state);\n      this.setState(\n          {\n              text: ''\n          }\n      )\n      \n  }\n  render(){\n      return(\n          <form onSubmit={this.handleSubmit} className=\"addList\">\n              <input\n                  className=\"addList-input\"\n                  type = \"text\"\n                  value = {this.state.text}\n                  onChange={this.handleChange}\n                  required=\"required\"\n                  placeholder=\"New ToDo\"\n              >\n              </input>\n              <Button type={\"submit\"} className={\"addList-button\"}>\n                  +\n              </Button>\n          </form>\n      );\n  }\n}","import React from 'react'\nimport './ToDoContainer.scss'\n\nimport {\n  ToDoList,\n  AddToDoList\n} from \"../\";\n\n\nconst items = [\n]\nconst pluralize = count =>\n    count > 1 ? `There are ${count} todos.` : `There is ${count} todo.`;\n\nexport class ToDoContainer extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      items: items,\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.compleateItem = this.compleateItem.bind(this);\n  }\n  deleteItem=(id)=>{\n    const {items} = this.state;\n    const isNotId = item => item.id !== id;\n    const updateList = items.filter(isNotId);\n    this.setState({\n      items: updateList\n    });\n  }\n  addItem = (item) =>{\n    const {items} = this.state;\n     item.id = items.length+1;\n     item.compleateItem = false;\n     let updateList = [...items, item];\n     this.setState({\n        items: updateList\n      }\n     )\n  }\n\n  compleateItem = (item) =>{\n    const {items} = this.state;\n    \n    item.isCompleted \n      ? item.isCompleted = false\n      : item.isCompleted = true\n\n    this.setState({\n      items\n    });\n    \n  }\n\n  render() {\n    return (\n      <div>\n       <h3 className='h3'>{pluralize(this.state.items.length)}</h3>\n       <div>\n        <ToDoList items = {this.state.items} deleteItem={this.deleteItem} compleateItem={this.compleateItem} className=\"items\"/>\n       </div>\n       <AddToDoList addItem={this.addItem}/>\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react'\n\nimport './Button.scss'\n\nexport const Button =({\n  onClick,\n  className,\n  type,\n  children,\n})=>\n  <button\n      onClick ={onClick}\n      className={className}\n      type={type}\n  >\n      {children}\n  </button>\n","import React from 'react'\nimport './MainSection.scss'\n\nimport {\n  ToDoContainer\n} from \"../\";\n\nexport class MainSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '', done: null, hide: null};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n  handleSubmit(event) {\n    this.setState({ done: true, hide: true })\n  }\n\n  render() {\n    return (\n        <section className='box'>\n          {!this.state.done && (\n            <form className='box-form' onSubmit={this.handleSubmit}>\n              <h2 className='h2'>enter the first name and lets start</h2>\n              <input\n                type=\"text\"\n                placeholder=\"First name\"\n                className=\"box-form-input\"\n                required=\"required\" \n                onChange={this.handleChange} />\n              <button className=\"box-form-button\">\n                remember me\n              </button>\n            </form>\n          )}\n          {this.state.hide && (\n            <div>\n              <h2 className=\"h2\">{('Welcome ' + this.state.value)}</h2>\n              <ToDoContainer />\n            </div>\n          )}\n        </section>\n    );\n  }\n}\n\n\n\n","import React from 'react'\nimport './Footer.scss'\n\nexport const Footer = () => (\n    <footer className='footer'>\n      <div className='container'>\n        \n      </div>\n      <a className='header-logo' href='/'>ToDo</a>\n    </footer>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  Header,\n  MainSection,\n  Footer\n} from \"./components\";\n\nexport default function App() {\n  return (\n    <div className='wrap'>\n      <img className='wrap-bg' src='https://s01.cdn-pegast.net/get/49/0a/c3/ba816b24ac3207b2871e9bc15c30a26f9fbfba22078e8211767850cf44/5bbb812696901.jpg' alt='alt' />\n      <Header />\n      <MainSection />\n      <Footer />\n    </div>\n  );\n}"],"sourceRoot":""}